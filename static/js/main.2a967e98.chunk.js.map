{"version":3,"sources":["fbase.js","components/NweetFactory.js","components/Nweet.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","NweetFactory","userObj","useState","nweet","setNweet","attachment","setAttachment","onSubmit","event","a","preventDefault","attachmentURL","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","nweetObj","text","createdat","Date","now","creatorId","collection","add","className","type","placeholder","maxLength","value","onChange","target","htmlFor","icon","faPlus","id","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","src","backgroundImage","alt","onClick","faTimes","Nweet","isOwner","editing","setEditing","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","delete","refFromURL","toggleEditing","update","required","autoFocus","faTrash","faPencilAlt","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","AuthForm","email","getEmail","password","getPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setDisplayName","getMyNweets","where","orderBy","get","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAeAA,IAASC,cAVc,CACrBC,OAAQC,0CACRC,WAAYD,gCACZE,YAAaF,uCACbG,UAAWH,gBACXI,cAAeJ,4BACfK,kBAAmBL,eACnBM,MAAON,8CAKF,IAAMO,EAAmBV,IAEnBW,EAAcX,IAASY,OAEvBC,EAAYb,IAASc,YAErBC,EAAiBf,IAASgB,U,gBCgFxBC,EAjGM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACVC,mBAAS,IADC,mBAC7BC,EAD6B,KACtBC,EADsB,OAEAF,mBAAS,IAFT,mBAE7BG,EAF6B,KAEjBC,EAFiB,KAG9BC,EAAQ,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,yDACfD,EAAME,iBACQ,KAAVP,EAFW,oDAKXQ,EAAgB,GACD,KAAfN,EANW,wBAOPO,EAAgBd,EACnBe,MACAC,MAFmB,UAEVb,EAAQc,IAFE,YAEKC,gBATd,SAUUJ,EAAcK,UAAUZ,EAAY,YAV9C,cAUPa,EAVO,iBAWSA,EAASL,IAAIM,iBAXtB,QAWbR,EAXa,sBAaTS,EAAW,CACfC,KAAMlB,EACNmB,UAAWC,KAAKC,MAChBC,UAAWxB,EAAQc,IACnBJ,iBAjBa,UAmBTf,EAAU8B,WAAW,UAAUC,IAAIP,GAnB1B,QAoBfhB,EAAS,IACTE,EAAc,IArBC,4CAAH,sDAiDd,OACE,uBAAMC,SAAUA,EAAUqB,UAAU,cAApC,UACE,sBAAKA,UAAU,0BAAf,UACE,uBACEA,UAAU,sBACVC,KAAK,OACLC,YAAY,oBACZC,UAAW,IACXC,MAAO7B,EACP8B,SAlCS,SAAAzB,GAAU,IAEbwB,EACRxB,EADF0B,OAAUF,MAEZ5B,EAAS4B,MAgCL,uBAAOH,KAAK,SAASG,MAAM,SAASJ,UAAU,2BAEhD,wBAAOO,QAAQ,cAAcP,UAAU,sBAAvC,UACE,8CACA,cAAC,IAAD,CAAiBQ,KAAMC,SAEzB,uBACEC,GAAG,cACHT,KAAK,OACLU,OAAO,UACPN,SAvCe,SAAAzB,GAAU,IAIvBgC,EADFhC,EADF0B,OAAUO,MAEU,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAAAC,GAAkB,IAEhBC,EACfD,EADFE,cAAiBD,OAEnBxC,EAAcwC,IAEhBJ,EAAOM,cAAcR,IA4BjBS,MAAO,CACLC,QAAS,KAGZ7C,GACC,sBAAKuB,UAAU,0BAAf,UACE,qBACEuB,IAAK9C,EACL4C,MAAO,CACLG,gBAAiB/C,GAEnBgD,IAAI,KAEN,sBAAKzB,UAAU,qBAAqB0B,QAtClB,WACxBhD,EAAc,KAqCR,UACE,0CACA,cAAC,IAAD,CAAiB8B,KAAMmB,gBCjBpBC,EAzED,SAAC,GAA2B,IAAzBpC,EAAwB,EAAxBA,SAAUqC,EAAc,EAAdA,QAAc,EACTvD,oBAAS,GADA,mBAChCwD,EADgC,KACvBC,EADuB,OAEPzD,mBAASkB,EAASC,MAFX,mBAEhCuC,EAFgC,KAEtBC,EAFsB,KAIjCC,EAAa,uCAAG,sBAAArD,EAAA,0DACTsD,OAAOC,QAAQ,8CADN,gCAGZpE,EAAUqE,IAAV,iBAAwB7C,EAASkB,KAAM4B,SAH3B,uBAIZpE,EAAeqE,WAAW/C,EAAST,eAAeuD,SAJtC,2CAAH,qDAQbE,EAAgB,WACpBT,GAAYD,IAkBd,OACE,qBAAK9B,UAAU,QAAf,SACG8B,EACC,qCACE,uBAAMnD,SAZG,SAAAC,GACfA,EAAME,iBACNd,EAAUqE,IAAV,iBAAwB7C,EAASkB,KAAM+B,OAAO,CAC5ChD,KAAMuC,IAERD,GAAW,IAOqB/B,UAAU,sBAApC,UACE,uBACEC,KAAK,OACLG,MAAO4B,EACP9B,YAAY,qBACZwC,UAAQ,EACRC,WAAS,EACTtC,SA1BK,SAAAzB,GAAU,IAEbwB,EACRxB,EADF0B,OAAUF,MAEZ6B,EAAY7B,IAuBFJ,UAAU,cAEZ,uBAAOC,KAAK,SAASG,MAAM,eAAeJ,UAAU,eAEtD,sBAAM0B,QAASc,EAAexC,UAAU,oBAAxC,uBAKF,qCACE,6BAAKR,EAASC,OACbD,EAAST,eACR,qBAAKwC,IAAK/B,EAAST,cAAe0C,IAAI,KAEvCI,GACC,sBAAK7B,UAAU,iBAAf,UACE,sBAAM0B,QAASQ,EAAf,SACE,cAAC,IAAD,CAAiB1B,KAAMoC,QAEzB,sBAAMlB,QAASc,EAAf,SACE,cAAC,IAAD,CAAiBhC,KAAMqC,iBCjCxBC,EA7BF,SAAC,GAAiB,IAAfzE,EAAc,EAAdA,QAAc,EACAC,mBAAS,IADT,mBACrByE,EADqB,KACbC,EADa,KAa5B,OAVAC,qBAAU,WACRjF,EAAU8B,WAAW,UAAUoD,YAAW,SAAAC,GACxC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAAAjB,GAAG,oBACtC3B,GAAI2B,EAAI3B,IACL2B,EAAIkB,WAETP,EAAUI,QAEX,IAGD,sBAAKpD,UAAU,YAAf,UACE,cAAC,EAAD,CAAc3B,QAASA,IACvB,qBAAKgD,MAAO,CAAEmC,UAAW,IAAzB,SACGT,EAAOO,KAAI,SAAA/E,GAAK,OACf,cAAC,EAAD,CACEiB,SAAUjB,EAEVsD,QAAStD,EAAMsB,YAAcxB,EAAQc,KADhCZ,EAAMmC,aC2CR+C,EAlEE,WAAO,IAAD,EACKnF,mBAAS,IADd,mBACdoF,EADc,KACPC,EADO,OAEWrF,mBAAS,IAFpB,mBAEdsF,EAFc,KAEJC,EAFI,OAGevF,oBAAS,GAHxB,mBAGdwF,EAHc,KAGFC,EAHE,OAIKzF,mBAAS,IAJd,mBAId0F,EAJc,KAIPC,EAJO,KAMf5D,EAAW,SAAAzB,GAAU,IAAD,EAGpBA,EADF0B,OAAU4D,EAFY,EAEZA,KAAM9D,EAFM,EAENA,MAEL,UAAT8D,EACFP,EAASvD,GACS,aAAT8D,GACTL,EAAYzD,IAIVzB,EAAQ,uCAAG,WAAMC,GAAN,SAAAC,EAAA,yDACfD,EAAME,iBADS,UAGTgF,EAHS,gCAILhG,EAAYqG,+BAA+BT,EAAOE,GAJ7C,6CAML9F,EAAYsG,2BAA2BV,EAAOE,GANzC,yDASbK,EAAS,KAAMI,SATF,0DAAH,sDAgBd,OACE,qCACE,uBAAM1F,SAAUA,EAAUqB,UAAU,YAApC,UACE,uBACEC,KAAK,QACLC,YAAY,QACZgE,KAAK,QACL9D,MAAOsD,EACPrD,SAAUA,EACVL,UAAU,cAEZ,uBACEK,SAAUA,EACVJ,KAAK,WACLC,YAAY,WACZgE,KAAK,WACL9D,MAAOwD,EACP5D,UAAU,cAEZ,uBACEC,KAAK,SACLG,MAAO0D,EAAa,iBAAmB,UACvC9D,UAAU,yBAEXgE,GAAS,sBAAMhE,UAAU,QAAhB,SAAyBgE,OAErC,sBAAMtC,QA7BY,WACpBqC,GAAc,SAAAO,GAAI,OAAKA,MA4BStE,UAAU,aAAxC,SACG8D,EAAa,UAAY,uB,QChBnBS,EApCF,WACX,IAAMC,EAAa,uCAAG,WAAM5F,GAAN,iBAAAC,EAAA,4DAKP,YAHDqF,EACRtF,EADF0B,OAAU4D,MAIVO,EAAW,IAAI5G,EAAiBE,KAAK2G,mBACnB,WAATR,IACTO,EAAW,IAAI5G,EAAiBE,KAAK4G,oBARnB,SAUd7G,EAAY8G,gBAAgBH,GAVd,2CAAH,sDAanB,OACE,sBAAKzE,UAAU,gBAAf,UACE,cAAC,IAAD,CACEQ,KAAMqE,IACNC,MAAO,UACPC,KAAK,KACL1D,MAAO,CAAE2D,aAAc,MAEzB,cAAC,EAAD,IACA,sBAAKhF,UAAU,WAAf,UACE,yBAAQ0B,QAAS8C,EAAeN,KAAK,SAASlE,UAAU,UAAxD,kCACuB,cAAC,IAAD,CAAiBQ,KAAMyE,SAE9C,yBAAQvD,QAAS8C,EAAeN,KAAK,SAASlE,UAAU,UAAxD,kCACuB,cAAC,IAAD,CAAiBQ,KAAM0E,SALhD,iICKSC,EAjCI,SAAC,GAAiB,IAAf9G,EAAc,EAAdA,QACpB,OACE,8BACE,qBAAIgD,MAAO,CAAE+D,QAAS,OAAQC,eAAgB,SAAU7B,UAAW,IAAnE,UACE,6BACE,cAAC,IAAD,CAAM8B,GAAG,IAAIjE,MAAO,CAAEkE,YAAa,IAAnC,SACE,cAAC,IAAD,CAAiB/E,KAAMqE,IAAWC,MAAO,UAAWC,KAAK,WAG7D,6BACE,eAAC,IAAD,CACEO,GAAG,WACHjE,MAAO,CACLmE,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,IAPd,UAUE,cAAC,IAAD,CAAiBnF,KAAMoF,IAAQd,MAAO,UAAWC,KAAK,OACtD,sBAAM1D,MAAO,CAAEmC,UAAW,IAA1B,SACGnF,EAAQwH,YAAR,UACMxH,EAAQwH,YADd,kBAEG,uBC0CHC,EApEC,SAAC,GAA8B,IAA5BzH,EAA2B,EAA3BA,QAAS0H,EAAkB,EAAlBA,YACtBC,EAAUC,cAD8B,EAEH3H,mBAAS,IAFN,mBAErC4H,EAFqC,KAErBC,EAFqB,KAStCC,EAAW,uCAAG,sBAAAvH,EAAA,sEACZb,EACH8B,WAAW,UACXuG,MAAM,YAAa,KAAMhI,EAAQc,KACjCmH,QAAQ,aACRC,MALe,2CAAH,qDAQjBtD,qBAAU,WACRmD,MACC,IAEH,IAOMzH,EAAQ,uCAAG,WAAMC,GAAN,SAAAC,EAAA,yDACfD,EAAME,iBACFT,EAAQwH,cAAgBK,EAFb,gCAGP7H,EAAQmI,cAAc,CAC1BX,YAAaK,IAJF,OAMbH,IACAI,EAAe,IAPF,2CAAH,sDAWd,OACE,mCACE,sBAAKnG,UAAU,YAAf,UACE,uBAAMrB,SAAUA,EAAUqB,UAAU,cAApC,UACE,uBACEA,UAAU,YACV2C,WAAS,EACT1C,KAAK,OACLC,YAAY,cACZG,SA3BO,SAAAzB,GAAU,IAEbwB,EACRxB,EADF0B,OAAUF,MAEZ+F,EAAe/F,IAwBPA,MAAO8F,GAAkC,KAE3C,uBACEjG,KAAK,SACLG,MAAM,iBACNJ,UAAU,UACVqB,MAAO,CACLmC,UAAW,SAIjB,sBAAMxD,UAAU,2BAA2B0B,QAxD3B,WACpB5D,EAAY2I,UACZT,EAAQU,KAAK,MAsDT,2BCpBOC,EArCG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAYvI,EAA2B,EAA3BA,QAAS0H,EAAkB,EAAlBA,YACxC,OACE,eAAC,IAAD,WACGa,GAAc,cAAC,EAAD,CAAYvI,QAASA,IACpC,cAAC,IAAD,UACGuI,EACC,mCACE,sBACEvF,MAAO,CACLwF,SAAU,IACVC,MAAO,OACPC,OAAQ,SACRvD,UAAW,GACX4B,QAAS,OACTC,eAAgB,UAPpB,UAUE,cAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAM5I,QAASA,MAEjB,cAAC,IAAD,CAAO4I,KAAK,WAAZ,SACE,cAAC,EAAD,CAAS5I,QAASA,EAAS0H,YAAaA,WAK9C,mCACE,cAAC,IAAD,CAAOkB,KAAK,IAAZ,SACE,cAAC,EAAD,cCYCC,MA3Cf,WAAgB,IAAD,EACW5I,oBAAS,GADpB,mBACN6I,EADM,KACAC,EADA,OAEiB9I,mBAAS,MAF1B,mBAEND,EAFM,KAEGgJ,EAFH,KA4Bb,OAxBApE,qBAAU,WACRnF,EAAYwJ,oBAAmB,SAAAC,GAE3BF,EADEE,EACS,CACT1B,YAAa0B,EAAK1B,YAClB1G,IAAKoI,EAAKpI,IACVqH,cAAe,SAAAgB,GAAI,OAAID,EAAKf,cAAcgB,KAGjC,MAEbJ,GAAQ,QAET,IAYD,8BACGD,EACC,cAAC,EAAD,CACEpB,YAbY,WAClB,IAAMwB,EAAOzJ,EAAY2J,YACzBJ,EAAW,CACTxB,YAAa0B,EAAK1B,YAClB1G,IAAKoI,EAAKpI,IACVqH,cAAe,SAAAgB,GAAI,OAAID,EAAKf,cAAcgB,OAStCZ,WAAYc,QAAQrJ,GACpBA,QAASA,IAGX,oB,MCpCRsJ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2a967e98.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\n\nexport const dbService = firebase.firestore();\n\nexport const storageService = firebase.storage();\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async event => {\n    event.preventDefault();\n    if (nweet === \"\") {\n      return;\n    }\n    let attachmentURL = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentURL = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdat: Date.now(),\n      creatorId: userObj.uid,\n      attachmentURL,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = event => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = event => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = finishedEvent => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n  };\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          type=\"text\"\n          placeholder=\"What's your mind?\"\n          maxLength={120}\n          value={nweet}\n          onChange={onChange}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n            alt=\"\"\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delet this nweet?\");\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      await storageService.refFromURL(nweetObj.attachmentURL).delete();\n    }\n  };\n\n  const toggleEditing = () => {\n    setEditing(!editing);\n  };\n\n  const onChange = event => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              value={newNweet}\n              placeholder=\"What is your mind?\"\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentURL && (\n            <img src={nweetObj.attachmentURL} alt=\"\" />\n          )}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import NweetFactory from \"components/NweetFactory\";\nimport { dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\n\nimport Nweet from \"../components/Nweet\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"nweets\").onSnapshot(snapshot => {\n      const nweetArray = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map(nweet => (\n          <Nweet\n            nweetObj={nweet}\n            key={nweet.id}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n  const [email, getEmail] = useState(\"\");\n  const [password, getPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = event => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      getEmail(value);\n    } else if (name === \"password\") {\n      getPassword(value);\n    }\n  };\n\n  const onSubmit = async event => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => {\n    setNewAccount(prev => !prev);\n  };\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          type=\"email\"\n          placeholder=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          onChange={onChange}\n          type=\"password\"\n          placeholder=\"password\"\n          name=\"password\"\n          value={password}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n          className=\"authInput authSubmit\"\n        />\n        {error && <span className=\"error\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","/* eslint-disable no-unused-vars */\nimport AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async event => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n        database 관리를 위해 일주일마다 database 초기화 합니다.\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n        <li>\n          <Link to=\"/\" style={{ marginRight: 10 }}>\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n          </Link>\n        </li>\n        <li>\n          <Link\n            to=\"/profile\"\n            style={{\n              marginLeft: 10,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              fontSize: 12,\n            }}\n          >\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <span style={{ marginTop: 10 }}>\n              {userObj.displayName\n                ? `${userObj.displayName}의 Profile`\n                : \"Profile\"}\n            </span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { authService, dbService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  let history = useHistory();\n  const [newDisplayName, setDisplayName] = useState(\"\");\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const getMyNweets = async () => {\n    await dbService\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdat\")\n      .get();\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n\n  const onChange = event => {\n    const {\n      target: { value },\n    } = event;\n    setDisplayName(value);\n  };\n  //submit\n  const onSubmit = async event => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n      setDisplayName(\"\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <form onSubmit={onSubmit} className=\"profileForm\">\n          <input\n            className=\"formInput\"\n            autoFocus\n            type=\"text\"\n            placeholder=\"displayName\"\n            onChange={onChange}\n            value={newDisplayName ? newDisplayName : \"\"}\n          />\n          <input\n            type=\"submit\"\n            value=\"Update Profile\"\n            className=\"formBtn\"\n            style={{\n              marginTop: 10,\n            }}\n          />\n        </form>\n        <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n          Log Out\n        </span>\n      </div>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"../routes/Home\";\nimport Auth from \"../routes/Auth\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"routes/Profile\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <div\n              style={{\n                maxWidth: 890,\n                width: \"100%\",\n                margin: \"0 auto\",\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route path=\"/profile\">\n                <Profile userObj={userObj} refreshUser={refreshUser} />\n              </Route>\n            </div>\n          </>\n        ) : (\n          <>\n            <Route path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: args => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: args => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <div>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initialization\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}